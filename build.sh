#!/usr/bin/env bash
set -xe

export STATIC_FLAGS="-static-libgcc -static-libstdc++"
export GENERATOR=Ninja

LLVM_PROJECT_MAIN_SRC_DIR=/work/llvm-project
LLVM_PROJECT_MAIN_BINARY_DIR=/work/build
LLVM_PROJECT_HOST_MAIN_BINARY_DIR=/work/build_host

export ARCH=AArch64
export CXX_COMPILER=aarch64-unknown-linux-gnu-g++
export C_COMPILER=aarch64-unknown-linux-gnu-gcc
export LLVM_DEFAULT_TARGET_TRIPLE=aarch64-unknown-linux-gnu
export LLVM_HOST_TRIPLE=aarch64-unknown-linux-gnu

CMAKE_CONFIGS="\
    -DBUILD_SHARED_LIBS=OFF \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DCMAKE_C_COMPILER=$C_COMPILER \
    -DCMAKE_INSTALL_PREFIX=/install \
    \
    -DLLVM_BUILD_BENCHMARKS=OFF \
    -DLLVM_BUILD_EXAMPLES=OFF \
    -DLLVM_BUILD_RUNTIMES=OFF \
    -DLLVM_BUILD_TESTS=OFF \
    -DLLVM_BUILD_TOOLS=ON \
    -DCMAKE_C_COMPILER_LAUNCHER=ccache \
    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
    -DLLVM_BUILD_UTILS=ON \
    -DLLVM_DEFAULT_TARGET_TRIPLE=$LLVM_DEFAULT_TARGET_TRIPLE \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DLLVM_ENABLE_PROJECTS=mlir \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_ZSTD=OFF \
    -DLLVM_HOST_TRIPLE=$LLVM_HOST_TRIPLE \
    -DLLVM_INCLUDE_BENCHMARKS=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_RUNTIMES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_INCLUDE_TOOLS=ON \
    -DLLVM_INCLUDE_UTILS=ON \
    -DLLVM_INSTALL_UTILS=ON \
    -DLLVM_TARGET_ARCH=$ARCH \
    \
    -DMLIR_BUILD_MLIR_C_DYLIB=1 \
    -DMLIR_ENABLE_BINDINGS_PYTHON=ON \
    -DMLIR_ENABLE_EXECUTION_ENGINE=ON \
    -DMLIR_ENABLE_SPIRV_CPU_RUNNER=ON \
    \
    -DPython3_EXECUTABLE=$(which python3)"

cmake $CMAKE_CONFIGS \
    -G "$GENERATOR" \
    -DLLVM_TARGETS_TO_BUILD=AArch64 \
    -DLLVM_USE_HOST_TOOLS=ON \
    -DLLVM_TABLEGEN=$LLVM_PROJECT_HOST_MAIN_BINARY_DIR/bin/llvm-tblgen \
    -DMLIR_LINALG_ODS_YAML_GEN=$LLVM_PROJECT_HOST_MAIN_BINARY_DIR/bin/mlir-linalg-ods-yaml-gen \
    -DMLIR_LINALG_ODS_YAML_GEN_EXE=$LLVM_PROJECT_HOST_MAIN_BINARY_DIR/bin/mlir-linalg-ods-yaml-gen \
    -DMLIR_PDLL_TABLEGEN=$LLVM_PROJECT_HOST_MAIN_BINARY_DIR/bin/mlir-pdll \
    -DMLIR_TABLEGEN=$LLVM_PROJECT_HOST_MAIN_BINARY_DIR/bin/mlir-tblgen \
    -DCMAKE_CXX_FLAGS="-O2 -static-libgcc -static-libstdc++" \
    -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++" \
    -S${LLVM_PROJECT_MAIN_SRC_DIR}/llvm \
    -B${LLVM_PROJECT_MAIN_BINARY_DIR}

cmake --build ${LLVM_PROJECT_MAIN_BINARY_DIR} --target install -j
